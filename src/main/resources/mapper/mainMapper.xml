<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mainSQL">
	<insert id="write" parameterType="main.bean.MainDTO">
		insert into person(name, age, photo) values(#{name}, #{age}, #{photo})
	</insert>
	
	<select id="mainList" resultType="main.bean.MainDTO">
		select * from person
	</select>
	
	<select id="product_card" resultType="main.bean.MainDTO">
		select * from product
	</select>
	
	<select id="product_detail" parameterType="String" resultType="main.bean.MainDTO">
		select * from product where seq = #{seq}
	</select>
	
	<select id ="product_list" parameterType="java.util.Map" resultType="main.bean.MainDTO">
		SELECT * FROM product WHERE title like CONCAT('%', #{word}, '%') AND category like
			CASE #{category}
				WHEN '수산물' THEN '수산물'
				WHEN '육류' THEN '육류'
				WHEN '야채' THEN '야채'
				WHEN '과일' THEN '과일'
				WHEN '욕실' THEN '욕실'
				WHEN '주방용품' THEN '주방용품'
				WHEN '면류' THEN '면류'
				WHEN '간식류' THEN '간식류'
				WHEN '건강식품' THEN '건강식품'
				WHEN '기타류' THEN '기타류'
				ELSE '%%'
			END ORDER BY
			CASE #{tag}
				WHEN 'new' THEN seq
				WHEN 'best' THEN sale
				WHEN 'sale' THEN sale
				WHEN 'price' THEN price
				ELSE seq
			END ASC LIMIT #{endNum} OFFSET #{startNum}
	</select>
	
	<select id="oneday_product" resultType="main.bean.MainDTO">
		select * from product ORDER BY sale desc limit 2 offset 0
	</select>
	
	<select id="product_number" resultType="String">
		select count(*) from product
	</select>
	
	<select id="login" parameterType="java.util.Map" resultType="main.bean.UserDTO">
		select * from user where id=#{id} and pwd=#{pwd}
	</select>
	
	<select id="check_login" parameterType="java.util.Map" resultType="main.bean.UserDTO">
		select * from user where seq=#{seq}
	</select>
	
	<select id ="cart_list" parameterType="java.util.Map" resultType="main.bean.CartDTO">
		SELECT *
		FROM cart
			inner join product
		    on cart.product = product.seq
		WHERE cart.user = #{seq}
	</select>
	
	<delete id="cart_delete" parameterType="java.util.Map">
		delete from cart where cart_seq = #{cart_seq}
	</delete>
	
	<update id="cart_num_edit" parameterType="java.util.Map">
		UPDATE cart
		SET number = CASE #{plus_minus}
		    WHEN 'plus' THEN number + 1
		    WHEN 'minus' THEN number - 1
		    ELSE number
		END
		WHERE cart_seq=#{cart_seq}
	</update>
	
	<select id="check_cart" parameterType="java.util.Map" resultType="main.bean.CartDTO">
		select * from cart where user=#{user_seq} and product=#{product_seq}
	</select>
	
	<insert id="cart_insert" parameterType="java.util.Map">
		insert into cart(user, product, number) values(#{user_seq}, #{product_seq}, #{product_number})
	</insert>

	<select id="getNoticeList" resultType="main.bean.NoticeDTO">
		SELECT * FROM notices
	</select>
	
	<select id="getNoticeDetail" parameterType="int" resultType="main.bean.NoticeDTO">
		SELECT * FROM notices WHERE id = #{id}
	</select>
	
		<select id="getFaqList" resultType="main.bean.FaqDTO">
		SELECT * FROM faq
	</select>
	
	<select id="findId" resultType="main.bean.UserDTO">
		SELECT * FROM user WHERE name = #{name} AND CONCAT(email1, '@', email2) = #{email}
	</select>
	
	<select id="checkUserId" resultType="main.bean.UserDTO" parameterType="String">
		SELECT * FROM user where id=#{id}
	</select>
	
	<select id="checkEmail" resultType="main.bean.UserDTO" parameterType="java.util.Map">
		SELECT * FROM user where email1=#{email1} and email2=#{email2}
	</select>
	
	<insert id="signUp" parameterType="java.util.Map">
		INSERT INTO user (id, pwd, name, email1, email2)
		values(#{id}, #{pwd}, #{name}, #{email1}, #{email2})
	</insert>
	
	<select id="comment_detail" parameterType="java.util.Map" resultType="main.bean.CommentDTO">
		select * from comment where user = #{user} and product = #{product}
	</select>
	
	<select id="comment_list" parameterType="java.util.Map" resultType="main.bean.CommentDTO">
		select * from comment where product = #{product}
	</select>
	
	<select id="comment_count" parameterType="java.util.Map" resultType="String">
		SELECT COUNT(*) AS count FROM comment WHERE product = #{product}
	</select>
	
	<select id="getInquiryList" resultType="main.bean.InquiryDTO">
    	SELECT * FROM inquiry
	</select>

	<insert id="insertInquiry" parameterType="main.bean.InquiryDTO">
   	 INSERT INTO inquiry (title, content, createdAt, replyStatus, type, subType)
   	 VALUES (#{title}, #{content}, #{createdAt}, #{replyStatus}, #{type}, #{subType})
	</insert>

	<update id="updateInquiry" parameterType="main.bean.InquiryDTO">
    	UPDATE inquiry
    	SET title = #{title}, content = #{content}, createdAt = #{createdAt}
    	WHERE id = #{id}
	</update>

	<delete id="deleteInquiry" parameterType="int">
    	DELETE FROM inquiry
    	WHERE id = #{id}
	</delete>
	
	<select id="views_check" parameterType="java.util.Map" resultType="main.bean.ViewsDTO">
		select * from views where user = #{user} and product = #{product}
	</select>
	
	<insert id="views_insert" parameterType="java.util.Map">
		insert into views(user, product, views, logtime) VALUES (#{user}, #{product}, 1, now())
	</insert>
	
	<update id="views_increase" parameterType="java.util.Map">
		UPDATE views SET views = views + 1, logtime = NOW() WHERE user = #{user} and product = #{product}
	</update>
	
	<select id="findPwd" resultType="main.bean.UserDTO">
		SELECT * FROM user WHERE id = #{id} AND CONCAT(email1, '@', email2) = #{email}
	</select>
	
	<select id="checkName" resultType="main.bean.UserDTO" parameterType="String">
		SELECT * FROM user where name=#{name}
	</select>
	
	<insert id="order_success" parameterType="java.util.Map">
	  INSERT INTO order_history (order_num, user, product, number, delivery_state,logtime)
	  VALUES (#{order_num}, #{user}, #{product}, #{number}, #{delivery_state}, #{logtime})
	</insert>

	<delete id="cart_allDelete" parameterType="java.util.Map">
	  DELETE FROM cart WHERE user = #{user}
	</delete>
	
	<select id="order_history" parameterType="java.util.Map" resultType="main.bean.HistoryDTO">
		SELECT OH.seq AS historySeq, OH.order_num AS orderNum, OH.user, OH.product, OH.number, OH.delivery_state AS deliveryState, OH.logtime AS logTime, OH.review AS review,
       	P.seq AS productSeq, P.image AS productImage, P.title AS productTitle, P.price AS productPrice, P.sale AS productSale
		FROM order_history OH
		JOIN product P ON P.seq = OH.product
		WHERE OH.user = #{user} and OH.review ='n' ORDER BY OH.seq DESC;
	</select>

	<select id="order_history2" parameterType="java.util.Map" resultType="main.bean.HistoryDTO">
		SELECT OH.seq AS historySeq, OH.order_num AS orderNum, OH.user, OH.product, OH.number, OH.delivery_state AS deliveryState, OH.logtime AS logTime, OH.review AS review,
       	P.seq AS productSeq, P.image AS productImage, P.title AS productTitle, P.price AS productPrice, P.sale AS productSale
		FROM order_history OH
		JOIN product P ON P.seq = OH.product
		WHERE OH.user = #{user} and OH.review='y' ORDER BY OH.seq DESC;
	</select>
	
	<insert id="delivery_insert" parameterType="java.util.Map">
		INSERT INTO deliveryaddr (user, addr1, addr2, name, tel1, tel2, tel3, checked)
		values(#{user}, #{addr1}, #{addr2}, #{name}, #{tel1}, #{tel2}, #{tel3},	0)
	</insert>
	
	<select id="checkInfo" parameterType="java.util.Map" resultType="main.bean.UserDTO">
		select * from user where id=#{id} and pwd=#{pwd}
	</select>
	
	<select id="userUpdate" parameterType="java.util.Map" resultType="main.bean.UserDTO">
		select * from user where seq=#{seq}
	</select>

	<select id="delivery_list" parameterType="java.util.Map" resultType="main.bean.DeliveryDTO">
		select * from deliveryaddr where user=#{user}
	</select>

	<delete id="delivery_delete" parameterType="java.util.Map">
		delete from deliveryaddr where seq = #{seq}
	</delete>
<!--	<select id="delivery_delete" parameterType="java.util.Map" resultType="main.bean.DeliveryDTO">-->
<!--		select * from deliveryaddr where user=#{user};-->
<!--	</select>-->
	<select id="mycartList" parameterType="java.util.Map" resultType="CartDTO">
		SELECT * FROM cart where user = #{user}
	</select>
		
	<select id="getId" parameterType="java.util.Map" resultType="main.bean.UserDTO">
		select * from user where seq = #{seq}
	</select>

	<update id="modifyMember" parameterType="java.util.Map">
		update user set pwd=#{pwd}, name=#{name}, email1=#{email1}, email2=#{email2} where seq=#{seq}
	</update>

	<delete id="deleteUser" parameterType="java.util.Map">
		delete from user where seq=#{seq} 
	</delete>
	
	<select id="getOrderHistory1" parameterType="java.util.Map" resultType="main.bean.HistoryDTO">
	SELECT OH.seq AS historySeq, OH.order_num AS orderNum, OH.user, OH.product, OH.number, OH.delivery_state AS deliveryState, OH.review AS review, OH.logtime AS logTime,
       	P.seq AS productSeq, P.image AS productImage, P.title AS productTitle, P.price AS productPrice, P.sale AS productSale
		FROM order_history OH
		JOIN product P ON P.seq = OH.product
		WHERE OH.user = #{user}
		ORDER BY OH.seq DESC;
	</select>

	<update id="update_checked" parameterType="java.util.Map">
		<![CDATA[
			UPDATE deliveryaddr
			SET checked = CASE
				WHEN seq = #{seq} THEN 1
				ELSE 0
			END
			WHERE user = #{user}
		]]>
	</update>

	<update id="useraddr_update" parameterType="java.util.Map">
		UPDATE user
		JOIN deliveryaddr ON user.seq = deliveryaddr.user
		SET user.addr1 = #{addr1}, user.addr2 = #{addr2}
		WHERE deliveryaddr.user = #{user} AND deliveryaddr.checked = 1
	</update>

	<insert id="ReviewSubmit" parameterType="java.util.Map">
		insert into comment(user, product, name, title, content, logtime) values(#{user}, #{product}, #{name}, #{title}, #{content}, now())
	</insert>

	<select id="cart_delivery" resultType="main.bean.UserDTO">
		select addr1, addr2 from user where seq=#{user}
	</select>
	
	<select id="resetfindId" parameterType="java.util.Map" resultType="main.bean.UserDTO">
		select * from user where id=#{id}
	</select>
	
	<update id="resetpwd" parameterType="java.util.Map">
		update user set pwd=#{pwd} where seq=#{seq}
	</update>

	<update id="ReviewUpdate" parameterType="java.util.Map">
		update comment set title=#{title}, content=#{content}, logtime=now() where user=#{user} and product=#{product} and seq=#{seq}
	</update>

	<update id="Review_y"  parameterType="java.util.Map">
		update order_history set review = 'y' where user = #{user} and product = #{product}
	</update>
	
</mapper>